{"version":3,"file":"static/js/712.bbb8466f.chunk.js","mappings":"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","sources":["Components/UI/Promotion.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport \"./promotion.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faChevronLeft,\r\n  faChevronRight,\r\n  faPlay,\r\n  faPlus,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport moment from \"moment\";\r\nimport useFetchLanguage from \"../../Hooks/useFetchLanguage\";\r\nimport useFetchGenres from \"../../Hooks/useFetchGenres\";\r\nimport { setWatchList } from \"../../Redux/movieSlice\";\r\n// import useFetchCertifications from \"../../Hooks/useFetchCertifications\";\r\n\r\nexport default function Promotion() {\r\n  const bannerData = useSelector((state) => state.moviesData.bannerData);\r\n  const imageURL = useSelector((state) => state.moviesData.imageURL);\r\n  const { getGenreNames } = useFetchGenres();\r\n  const { getLanguageName } = useFetchLanguage();\r\n  // const { getCertificationName, loading: certLoading  } = useFetchCertifications();\r\n\r\n  const [currentBanner, setCurrentBanner] = useState(0);\r\n  const nextBanner = () => {\r\n    if (currentBanner < bannerData.length - 1) {\r\n      setCurrentBanner((preve) => preve + 1);\r\n    }\r\n  };\r\n  const previousBanner = () => {\r\n    if (currentBanner > 0) {\r\n      setCurrentBanner((preve) => preve - 1);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (currentBanner < bannerData.length - 1) {\r\n        nextBanner();\r\n      } else {\r\n        setCurrentBanner(0);\r\n      }\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, [bannerData, imageURL, currentBanner]);\r\n\r\n\r\n  const dispatch = useDispatch();\r\n  const addList = (e, type,id)=>{\r\n    e.preventDefault();\r\n    dispatch(setWatchList(type,id))\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"promotion\">\r\n        {bannerData.map((data, index) => {\r\n          return (\r\n            <div className=\"details\">\r\n              <div\r\n                className=\"banner\"\r\n                style={{\r\n                  transform: `translateX(-${currentBanner * 100}%)`,\r\n                  transition: \"transform 0.5s ease-in-out\",\r\n                }}\r\n              >\r\n                <img src={imageURL + data.backdrop_path} alt=\"\" />\r\n                <Link to={\"/\" + data?.media_type + \"/\" + data.id}>\r\n                  <div className=\"black\">\r\n                    <div className=\"banner-details\">\r\n                      <h1>\r\n                        {data.name || data.title || data.original_title || data.original_name}\r\n                      </h1>\r\n                      <p className=\"bold\">\r\n                        {data.media_type} | {getLanguageName(data.original_language)} | {\" \"}\r\n                         {/* {certLoading ? \"Loading certifications...\" : getCertificationName(data.media_type, \"US\", data.certification)} | */}\r\n                        {moment(data.release_date || data.first_air_date).format('YYYY')}\r\n                      </p>\r\n                      <p>{data.overview}</p>\r\n                      <p className=\"bold\">{getGenreNames(data.genre_ids)}</p>\r\n                      <div className=\"play-btn\">\r\n                        <Link to={`/${data?.media_type}/${data.id}/video`} >\r\n                          <div className=\"play\">\r\n                            <span>\r\n                              <FontAwesomeIcon icon={faPlay} />\r\n                            </span>\r\n                            Watch Now\r\n                          </div>\r\n                        </Link>\r\n                        <div className=\"w-list-btn\" onClick={(e)=>addList(e,data.media_type,data.id)}>\r\n                          <FontAwesomeIcon icon={faPlus} />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </Link>\r\n              </div>\r\n            </div>\r\n          );\r\n        })}\r\n        <div className=\"next-banner\">\r\n          <button className=\"btn\" onClick={previousBanner}>\r\n            <FontAwesomeIcon icon={faChevronLeft} />\r\n          </button>\r\n          <div className=\"slide-banner\">\r\n            {bannerData.map((data, index) => {\r\n              return (\r\n                <div\r\n                  className=\"mini-banner\"\r\n                  style={{\r\n                    transform: `translateX(-${currentBanner * 9.4}vw)`,\r\n                    transition: \"transform 0.5s ease-in-out\",\r\n                  }}\r\n                >\r\n                  <img src={imageURL + data.backdrop_path} alt=\"\"/>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n          <button className=\"btn\" onClick={nextBanner}>\r\n            <FontAwesomeIcon icon={faChevronRight} />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"],"names":["Promotion","bannerData","useSelector","state","moviesData","imageURL","getGenreNames","useFetchGenres","getLanguageName","useFetchLanguage","currentBanner","setCurrentBanner","useState","nextBanner","length","preve","useEffect","interval","setInterval","clearInterval","dispatch","useDispatch","_jsx","_Fragment","children","_jsxs","className","map","data","index","style","transform","transition","src","backdrop_path","alt","Link","to","media_type","id","name","title","original_title","original_name","original_language","moment","release_date","first_air_date","format","overview","genre_ids","FontAwesomeIcon","icon","faPlay","onClick","e","addList","type","preventDefault","setWatchList","faPlus","previousBanner","faChevronLeft","faChevronRight"],"sourceRoot":""}